<table width="100%">
<tr>
<td valign="top">

<table class="simple">
<tr>
  <td colspan="2" class="bottom_border">
    <b><%= _('General') %></b>
  </td>
</tr>
<tr>
  <td height="10"></td>
</tr>

<% if !new_provider %>
<tr>
  <td> <%= _('Active?') %>:</td>
  <td id="active" align="left">
    <% acc_write_prov = !accountant? || (accountant? && accountant_can_write?('manage_provider')) %>
    <% if acc_write_prov %>
        <%= link_to(b_check(title: _('Disable')), action: 'provider_change_status', id: provider.id, redirect_to_edit: 1) if provider.active == 1 %>
        <%= link_to(b_cross(title: _('Enable')), action: 'provider_change_status', id: provider.id, redirect_to_edit: 1) if provider.active == 0 %>
    <% else %>
        <%= b_check(title: _('Disable')) if provider.active == 1 %>
        <%= b_cross(title: _('Enable')) if provider.active == 0 %>
    <% end %>
  </td>
</tr>

  <% if device.device_type.to_s == 'SIP' %>
    <tr>
      <td> <%= _('Registration_Status') %>:</td>
      <td><%= prov_device_reg_status(provider.device.reg_status.to_s) + ' ' + prov_reg_status_msg(provider) %> </td>
    </tr>
  <% end %>
<% end %>

<tr>
  <td> <%= _('Name') %>:</td>
  <td><%= text_field 'provider', 'name', "class" => "input", :maxlength => "30" %> </td>
</tr>

<tr>
  <td> <%= _('Tech') %>:</td>
  <td id="tech_select">
    <% if action.to_s == 'new' %>
        <% for pt in providertypes %>
            <%= radio_button_tag('provider[tech]', pt.name, provider.tech == pt.name) %> <%= print_tech pt.name %>
        <% end %>
    <% else %>
        <b><%= provider.tech %></b>
    <% end %>

  </td>
</tr>
<tr>
  <td height="5"></td>
</tr>
<tr>
  <td> <%= _('Tariff') %>:</td>
  <td><%= collection_select("provider", "tariff_id", tariffs.sort_by{ |t| t.name.downcase }, "id", "name") %> </td>
</tr>
<% if not new_provider %>
    <tr>
      <td> <%= _('DTMF_Mode') %>:</td>
      <td>
        <% device_dtmfmode = device.dtmfmode %>
        <% if ccl_active? and device.device_type.to_s == 'SIP' %>
          rfc2833
        <% else %>
          <select name="device[dtmfmode]">
            <option value="inband" <%= "selected" if device_dtmfmode == "inband" %>> inband</option>
            <option value="info" <%= "selected" if device_dtmfmode == "info" %>> info</option>
            <option value="rfc2833" <%= "selected" if device_dtmfmode == "rfc2833" %>> rfc2833</option>
            <option value="auto" <%= "selected" if device_dtmfmode == "auto" %>> auto</option>
          </select>
        <% end %>
      </td>
    </tr>

    <tr>
      <td> <%= _('Location') %>:</td>
      <td>

        <select name="device[location_id]">
          <% for loc in locations %>
              <option value=<%= loc.id %> <%= "selected" if device.location_id == loc.id %>> <%= loc.name %> </option>
          <% end %>
        </select>

      </td>
    </tr>

    <% if session[:usertype] != "reseller" %>
        <tr>
          <td> <%= b_provider_ani + _('Automatic_Number_Identification') %>:</td>
          <td>

            <%= radio_button_tag('provider[ani]', '0', provider.ani == 0) %> <%= _('_No') %>
            <%= radio_button_tag('provider[ani]', '1', provider.ani == 1) %> <%= _('_Yes') %>

          </td>
        </tr>
    <% end %>
    <tr>
      <td> <%= _('Ringing_Timeout') %>:   </td>
      <td><%= text_field 'provider', 'timeout', "class" => "input" , :size => "5", :maxlength => "4" %> <%= _('seconds') %> </td>
    </tr>
    <tr>
      <td> <%= _('Call_Timeout') %>:   </td>
      <td><%= text_field 'provider', 'max_timeout', "class" => "input" , :size => "5", :maxlength => "4" %> <%= _('seconds') %> </td>
    </tr>

    <tr>
      <td> <%= b_device + _('Device_ID') %>:</td>
      <td>

        <%= device.id if device %>

      </td>
    </tr>
    <tr>
      <td> <%= _('Call_limit') %>:</td>
      <td> <%= text_field 'provider', 'call_limit', "class" => "input", :size => "9", :maxlength => "10" %>
        (<%= _('Call_limit_notice') %>)
      </td>
    </tr>
    <tr>
      <td> <%= _('Hidden') %>? :</td>
      <td> <%= check_box_tag('provider[hidden]', "1", provider.hidden.to_i == 1) %></td>
    </tr>
    <% if provider_billing_active? %>
        <tr>
          <td id="prov_balance"> <%= _('Balance') %>:   </td>
          <td id="prov_balance_value"> <%= nice_number provider.balance * curr.exchange_rate %> <%= curr.name %></td>
        </tr>
        <tr>
          <td> <%= _('Balance_limit') %>:</td>
          <td> <%= text_field :provider, :balance_limit, :class => "input", :size => "9", :maxlength => "10", :value => nice_number(provider.balance_limit) %> <%= curr.name %>
        </tr>
    <% end %>

    <tr>
      <td height="20"></td>
    </tr>
    <tr>
      <td class="bottom_border" colspan=2>
        <b><%= _('Authentication') %></b>
      </td>
    </tr>
    <tr>
      <td height="10"></td>
    </tr>

    <% unless provider.is_dahdi? %>

        <tr id="auth_username">
          <td> <%= _('Login/Username') %>:</td>
          <td>
            <%= text_field 'provider', 'login', "class" => "input" %>

            <script type="text/javascript">
              new Form.Element.Observer('provider_login', 1, function(element, value) {format_register()})
              new Form.Element.Observer('prefix', 0.5, function(element, value) {new Ajax.Updater('results', '<%= Web_Dir %>/lcrs/prefix_finder_find', {asynchronous:false, evalScripts:true, onComplete:function(request){Element.hide('spinner');}, onLoading:function(request){Element.show('spinner');}, parameters:'prefix=' + encodeURIComponent(value)})})
            </script>
          </td>
        </tr>

        <tr id="auth_secret">
          <td> <%= _('Password') %>:</td>
          <td>
            <%= text_field 'provider', 'password', "class" => "input" %>
            <script type="text/javascript">
              new Form.Element.Observer('provider_password', 1, function(element, value) {format_register()})
            </script>
          </td>
        </tr>
        <tr>
          <td> <%= _('IP_Authentication') %>:</td>
          <td> <%= check_box_tag('ip_authentication', "1", device.username.length == 0, {:onChange => "show_hostname_lines(this.value);format_register();"}) %> </td>
        </tr>
    <% else %>
        <tr>
          <td> <%= _('Channel') %>:</td>
          <td> <%= text_field 'provider', 'channel', "class" => "input" %></td>
        </tr>
    <% end %>

    <% if provider.tech == "SIP" or provider.tech == "IAX2" %>
        <tr id="registration_notice" style="display:none;">
          <td></td>
          <td><%= _('Registration_can_be_used_when_at_least_Username_is_entered') %></td>
        </tr>

        <tr id="registration_check_prov">
          <td><%= _('Register') %>:</td>
          <td><%= check_box_tag 'register', "1", provider.register == 1, {:onClick => "show_lines(this.checked)"} %></td>
        </tr>

        <tr id="reg_extension_row" style="display:none;">
          <td><%= radio_button_tag('reg', 'extension', provider.reg_line.to_s.length == 0, {:onClick => "disable_lines(this.value); format_register();"}) %>&nbsp;<%= raw _('Register_extension').gsub(" ", "&nbsp;") %>
            :
          </td>
          <td>
            <%= text_field('provider', 'reg_extension', {"class" => "input"}) %>
            <script type="text/javascript">
              new Form.Element.Observer('provider_reg_extension', 1, function(element, value) {format_register()})
            </script>
          </td>
        </tr>

        <tr id="reg_line_row" style="display:none;">
          <td><%= radio_button_tag('reg', 'line', provider.reg_line.to_s.length > 0, {:onClick => "disable_lines(this.value); format_register();"}) %>&nbsp;<%= raw _('Register_line').gsub(" ", "&nbsp;") %>
            :
          </td>
          <td>
            <%= text_field('provider', 'reg_line', {"class" => "input", :size => "60"}) %>
            <script type="text/javascript">
              new Form.Element.Observer('provider_reg_line', 1, function(element, value) {format_register()})
            </script>
          </td>
        </tr>

        <tr id="reg_register_row" style="display:none;">
          <td colspan="2" id="reg_register">register =></td>
        </tr>

        <tr id="reg_notice_dynamic" style="display:none;">
          <td colspan="2"><%= b_info + _('When_Provider_is_Dynamic_it_is_not_allowed_to_register_to_it') %></td>
        </tr>

    <% end %>

    <% unless provider.is_dahdi? %>

        <tr>
          <td height="20"></td>
        </tr>
        <tr <%= tooltip(_('Provider_CallerID'), _('Provider_CallerID_Explanation')) %>>
          <td class="bottom_border" colspan=2>
            <b><%= _('Provider_CallerID') %></b>
          </td>
        </tr>
        <tr>
          <td height="10"></td>
        </tr>

        <% if admin? || reseller? %>
          <tr>
            <td colspan="2">
              <table>
                <tr>
                  <td> <%= _('Name') %>:</td>
                  <td> <%= text_field_tag 'cid_name', cid_name, "class" => "input" %> </td>
                </tr>
                <tr>
                  <td height="10"></td>
                </tr>
                <tr>
                  <td><%= radio_button_tag('device_caller_id_number', 1, device_caller_id_number.to_i == 1, :onchange => 'disable_radio_buttons(this.id)') %></td>
                  <td><%= _('Number') %>: <%= text_field_tag 'cid_number', cid_number, "class" => "input" %> </td>
                </tr>
                <tr id='id_device_caller_id_number_7' >
                  <td><%= radio_button_tag('device_caller_id_number', 2, device_caller_id_number.to_i == 2, :disabled => !(number_pools.size > 0), :onchange => 'disable_radio_buttons(this.id)') %></td>
                  <td><%= _('Random_Number_from_Number_Pool') %>: <%= select_tag 'callerid_number_pool_id', options_for_select(number_pools, device.callerid_number_pool_id.to_i) %></td>
                </tr>
              </table>
            </td>
            </tr>
        <% else %>
          <tr>
            <td> <%= _('Name') %>:</td>
            <td> <%= text_field_tag 'cid_name', cid_name, "class" => "input" %> </td>
          </tr>
          <tr>
            <td> <%= _('Number') %>:</td>
            <td> <%= text_field_tag 'cid_number', cid_number, "class" => "input" %> </td>
          </tr>
        <% end %>

        <tr>
          <td height="20"></td>
        </tr>
        <tr>
          <td class="bottom_border" colspan=2>
            <b><%= _('Network_related') %></b>
          </td>
        </tr>
        <tr>
          <td height="10"></td>
        </tr>
        <tr>
          <td colspan="2">
            <table width="100%">
              <tr>
                <% hostname_ip = provider.type -%>
                <td><%= radio_button_tag('hostname_ip', 'hostname', hostname_ip.to_s == "hostname", {:onChange => "show_hostname_lines(this.value);format_register();"}) %> <%= _('Hostname') %></td>
                <td><%= radio_button_tag('hostname_ip', 'ip', hostname_ip.to_s == "ip", {:onChange => "show_hostname_lines(this.value);format_register();"}) %> <%= _('Hostname') %>
                  /<%= _('IP') %></td>
                <td><%= radio_button_tag('hostname_ip', 'dynamic', hostname_ip.to_s == "dynamic", {:onChange => "show_hostname_lines(this.value);format_register();"}) %> <%= _("Dynamic") %></td>
              </tr>
            </table>
          </td>
        </tr>
        <tr id="server_hostname_row">
          <td><%= link_to(b_exclamation, {controller: :monitorings, action: :blocked_ips}, link_tooltip(_('Provider_IP_is_blocked'), _('More_details_in_Monitorings_Blocked_IPs_page'))) + ' ' if admin? && provider.blocked_ip_status_server_ip %><%= _('Hostname') %>:</td>
          <td>
            <%= text_field 'provider', 'server_ip', "class" => "input" %>
            <script type="text/javascript">
              new Form.Element.Observer('provider_server_ip', 1, function(element, value) {format_register()})
            </script>
          </td>
        </tr>
        <tr id="server_ip_row">
          <td><%= link_to(b_exclamation, {controller: :monitorings, action: :blocked_ips}, link_tooltip(_('Provider_IP_is_blocked'), _('More_details_in_Monitorings_Blocked_IPs_page'))) + ' ' if admin? && provider.blocked_ip_status_device_ip %><%= _('Server_IP') %>:</td>
        <div id='ip_format_ip'>
          <td>
          <%= text_field 'device', 'ipaddr', "class" => "input", "id" => "ip_add_value_ip" %>
            <script type="text/javascript">
              new Form.Element.Observer('device_ipaddr', 1, function(element, value) {format_register()})
            </script>
          </td>
        </div>
        </tr>
        <% if ccl_active? and device and device.device_type.to_s == "SIP" %>
          <tr id="ip_auth_zero_port">
            <td id="zero_port"> <%= _('Accept_calls_from_any_port') %>: </td>
            <td id="zero_port_2">
              <%= radio_button_tag('zero_port', '0', device.proxy_port.to_i > 0) %> <%= _('_No') %>
     	      <%= radio_button_tag('zero_port', '1', device.proxy_port.to_i == 0) %> <%= _('_Yes') %>
            </td>
          </tr>
        <% end %>
        <tr id="server_port_row">
          <td> <%= _('Port') %>:</td>
          <td>
            <%= text_field 'provider', 'port', "class" => "input" %>
            <script type="text/javascript">
              new Form.Element.Observer('provider_port', 1, function(element, value) {format_register()})
            </script>
          </td>
        </tr>

        <tr>
          <td colspan=2>
            <%= _('Media_control') %> - <%= _('canreinvite') %>:
            <select id="canreinvite" name="device[canreinvite]">
              <option value="no" <%= "selected" if device.canreinvite == "no" %>> <%= _('_no') %></option>
              <option value="yes" <%= "selected" if device.canreinvite == "yes" %>> <%= _('_yes') %></option>
              <option value="nonat" <%= "selected" if device.canreinvite == "nonat" %>> <%= _('nonat') %></option>
              <option value="update" <%= "selected" if device.canreinvite == "update" %>> <%= _('update_small') %></option>
              <option value="update,nonat" <%= "selected" if device.canreinvite == "update,nonat" %>> <%= _('update_small') %>,<%= _('nonat') %></option>
            </select>
          </td>
        </tr>

        <tr>
          <td colspan=2>
            NAT:
            <%= radio_button_tag('device[nat]', 'no', device.nat == 'no', {:id => "device_nat_no"}) %> <%= _('_No') %>
            <%= radio_button_tag('device[nat]', 'yes', device.nat == 'yes', {:id => "device_nat_yes"}) %> <%= _('_Yes') %>
            <%= radio_button_tag('device[nat]', 'never', device.nat == 'never', {:id => "device_nat_never"}) %> <%= _('Never') %>
            <%= radio_button_tag('device[nat]', 'route', device.nat == 'route', {:id => "device_nat_route"}) %> <%= _('Route') %>
          </td>
        </tr>
        <tr>
          <td colspan=2>
            <div id="qualify_row1">
              <%= _('Qualify') %>:
              <%= radio_button_tag('qualify', 'no', device.qualify == 'no') %> <%= _('_No') %>
              <%= radio_button_tag('qualify', 'yes', device.qualify != 'no') %> <%= _('_Yes') %>
              &nbsp;<%= text_field_tag 'qualify_time', qualify_time, "class" => "input", :size => "5", :maxlength => "10" %>
              ms
            </div>
          </td>
        </tr>

      <% if provider.tech == "IAX2" %>
        <tr>
          <td colspan=2>
            IAX2 Trunking Mode:
            <%= radio_button_tag('iax2_trunking', 'no', checked = (provider.device.trunk == 'no')) %> <%= _('_No') %>
            <%= radio_button_tag('iax2_trunking', 'yes', checked = (provider.device.trunk == 'yes')) %> <%= _('_Yes') %>
          </td>
        </tr
>      <% end %>

    <% end %>

<% end %>
<%= render 'select_servers', servers: servers, serverproviders: serverproviders, provider: provider unless reseller? %>
</table>

</td>

<% if not new_provider and not provider.is_dahdi? %>

    <td valign="top">
    <table class="simple">
    <tr>
      <td colspan="2" class="bottom_border">
        <b><%= _('Codecs') %> </b> &nbsp; <%= _('Drag_and_drop') %>
      </td>
    </tr>
    <tr>
      <td height="10"></td>
    </tr>
    <tr>
      <td valign="top">
        <table class="simple">
          <tr>
            <td>
              <div class="simple"><%= _('Audio') %></div>
            </td>
          </tr>
          <tr>
            <td>
              <%= render '/providers/provider_codecs', :provider => provider, :codecs => audio_codecs, :ctype => 'audio' %>
              <%= sortable_element('audio_sortable_list', :tag => 'li', :update => 'audio_items', :url => {:controller => :providers, :ctype => "audio", :action => :providercodecs_sort, :id => provider ? provider.id : -1}) %>
            </td>
          </tr>
        </table>
      </td>

      <td valign="top">
        <table class='simple'>
          <tr>
            <td>
              <div class="simple"><%= _('Video') %></div>
            </td>
          </tr>
          <tr>
            <td>
              <%= render '/providers/provider_codecs', :provider => provider, :codecs => video_codecs, :ctype => 'video' %>
              <%= sortable_element('video_sortable_list', :tag => 'li', :update => 'video_items', :url => {:controller => :providers, :ctype => "video", :action => :providercodecs_sort, :id => provider ? provider.id : -1}) %>
            </td>
          </tr>
        </table>
      </td>
    </tr>
        <% if provider.tech == "SIP" %>
           <tr>
             <td> <%= _('Enforce_codec_Leg') %>:</td>
              <td>
                   <%= radio_button_tag('device[inherit_codec]', '0', (device.try(:inherit_codec) != 1)) %> <%= _('_No') %>
                   <%= radio_button_tag('device[inherit_codec]', '1', (device.try(:inherit_codec) == 1)) %> <%= _('_Yes') %>
               </td>
             </tr>
       <% end %>

    <% if Confline.get_value("Show_advanced_Provider_settings", session[:user_id]).to_i == 1 %>
                    <tr><td height="20"></td></tr>
                    <tr>
                      <td colspan="2" class="bottom_border">
                        <b><%= _('Allowed_addresses') %></b>
                      </td>
                    </tr>
                    <tr><td height="10"></td></tr>

                    <tr>
                      <td> <div  class="simple"><%= _('IP') %></div> </td>
                      <td> <div  class="simple"><%= _('Mask') %></div> </td>
                    </tr>

                    <tr>
                      <td>  <%= text_field_tag 'ip_first', ip_first, "class" => "input" %>  </td>
                      <td>  <%= text_field_tag 'mask_first', mask_first, "class" => "input" %>  </td>
                    </tr>

                    <tr>
                      <td>  <%= text_field_tag 'ip_second', ip_second, "class" => "input" %>  </td>
                      <td>  <%= text_field_tag 'mask_second', mask_second, "class" => "input" %>  </td>
                    </tr>

                    <tr>
                      <td>  <%= text_field_tag 'ip_third', ip_third, "class" => "input" %>  </td>
                      <td>  <%= text_field_tag 'mask_third', mask_third, "class" => "input" %>  </td>
                    </tr>
    <% end %>

    <tr>
      <td height="20"></td>
    </tr>

    <% if provider.tech == "SIP" %>

        <tr>
          <td class="bottom_border" colspan=2>
            <b><%= _('SIP_Specific') %></b>
          </td>
        </tr>
        <tr>
          <td height="10"></td>
        </tr>


        <tr>
          <td> <%= _('Fromuser') %>:</td>
          <td> <%= text_field_tag 'fromuser', device.fromuser, "class" => "input" %>  </td>
        </tr>
        <tr>
          <td> <%= _('Authuser') %>:</td>
          <td> <%= text_field_tag 'authuser', device.authuser, "class" => "input" %>  </td>
        </tr>
        <tr>
          <td> <%= _('Fromdomain') %>:</td>
          <td> <%= text_field_tag 'fromdomain', device.fromdomain, "class" => "input" %>  </td>
        </tr>

        <tr>
          <td> <%= _('Trustrpid') %>:</td>
          <td>

            <%= radio_button_tag('device[trustrpid]', 'no', device.trustrpid == 'no') %> <%= _('_No') %>
            <%= radio_button_tag('device[trustrpid]', 'yes', device.trustrpid == 'yes') %> <%= _('_Yes') %>
          </td>
        </tr>

        <tr>
          <td> <%= _('Sendrpid') %>:</td>
          <td>
            <%= radio_button_tag('device[sendrpid]', 'no', device.sendrpid == 'no') %> <%= _('_No') %>
            <%= radio_button_tag('device[sendrpid]', 'yes', device.sendrpid == 'yes') %> <%= _('_Yes') %>

          </td>
        </tr>

        <tr>
          <td> <%= _('Insecure') %>:</td>
          <td>
            Port: <%= check_box_tag 'insecure_port', "1", device.insecure.to_s.include?("port"), disabled: ccl_active? %>
            Invite: <%= check_box_tag 'insecure_invite', "1", device.insecure.to_s.include?("invite"), disabled: ccl_active? %>
          </td>
        </tr>

        <tr>
          <td> <%= _('T_38_support') %>: </td>
          <td>
            <%= radio_button_tag('device[t38pt_udptl]', "no", (device.t38pt_udptl == 'no')) %> <%= _('_No') %>
            <%= radio_button_tag('device[t38pt_udptl]', "yes", (device.t38pt_udptl == 'yes')) %> <%= _('_Yes') %>
            <%= radio_button_tag('device[t38pt_udptl]', "fec", (device.t38pt_udptl == 'yes,fec')) %> <%= _('Fec') %>
            <%= radio_button_tag('device[t38pt_udptl]', "redundancy", (device.t38pt_udptl == 'yes,redundancy')) %> <%= _('Redundancy') %>
            <%= radio_button_tag('device[t38pt_udptl]', "none", (device.t38pt_udptl == 'yes,none')) %> <%= _('None') %>
          </td>
        </tr>
        <tr>
          <td> <%= _('SIP_Session_Timers') %>: </td>
          <td>
            <%= radio_button_tag('device[session-timers]', "", !device['session-timers'].present?) %> <%= _('Default') %>
            <%= radio_button_tag('device[session-timers]', "Accept", (device['session-timers'] == 'accept')) %> <%= _('Accept') %>
            <%= radio_button_tag('device[session-timers]', "Originate", (device['session-timers'] == 'originate')) %> <%= _('Originate') %>
            <%= radio_button_tag('device[session-timers]', "Refuse", (device['session-timers'] == 'refuse')) %> <%= _('Refuse') %>
          </td>
        </tr>
        <tr>
          <td> <%= _('SIP_Session_Refresher') %>: </td>
          <td>
            <%= radio_button_tag('device[session-refresher]', "", !device['session-refresher'].present?) %> <%= _('Default') %>
            <%= radio_button_tag('device[session-refresher]', "UAC", (device['session-refresher'] == 'uac')) %> <%= _('UAC') %>
            <%= radio_button_tag('device[session-refresher]', "UAS", (device['session-refresher'] == 'uas')) %> <%= _('UAS') %>
          </td>
        </tr>
        <tr>
          <td> <%= _('SIP_Session_Expires') %>: </td>
          <td>
            <%= text_field_tag 'device[session-expires]', device['session-expires'].to_s, :size => 3, "class" => "input" %> <%= _('seconds') %>
          </td>
        </tr>
        <tr>
          <td> <%= _('SIP_Session_Minse') %>: </td>
          <td>
            <%= text_field_tag 'device[session-minse]', device['session-minse'].to_s, :size => 3, "class" => "input" %> <%= _('seconds') %>
          </td>
        </tr>
        <% if !ccl_active? %>
          <tr>
            <td> <%= _('SRTP_encryption') %>: </td>
            <td>
              <%= radio_button_tag('device[encryption]', "no",  (not device.srtp_encryption?)) %> <%= _('No') %>
              <%= radio_button_tag('device[encryption]', "yes", device.srtp_encryption?) %> <%= _('Yes') %>
            </td>
          </tr>
        <% end %>
        <tr>
          <td> <%= _('SIP_302_Reinvite_Support') %>:</td>
          <td>
            <%= radio_button_tag('device[promiscredir]', 'no', (device.promiscredir == 'no')) %> <%= _('_No') %>
            <%= radio_button_tag('device[promiscredir]', 'yes', (device.promiscredir == 'yes')) %> <%= _('_Yes') %>
          </td>
        </tr>
        <tr <%= tooltip(_('PAI'), _('PAI_Explanation')) %>>
          <td><%= _('P_Asserted_Identity_usage') %>:</td>
          <td>
            <%= radio_button_tag('provider[use_p_asserted_identity]', '0', checked = (provider.use_p_asserted_identity == 0)) %> <%= _('_No') %>
            <%= radio_button_tag('provider[use_p_asserted_identity]', '1', checked = (provider.use_p_asserted_identity == 1)) %> <%= _('_Yes') %>
          </td>
        </tr>
        <tr id="periodic" style="display: none;">
          <td> <%= _('periodic_check') %>:</td>
          <td>
            <%= radio_button_tag('provider[periodic_check]', 0, (provider.periodic_check == 0)) %> <%= _('_No') %>
            <%= radio_button_tag('provider[periodic_check]', 1, (provider.periodic_check == 1)) %> <%= _('_Yes') %>
          </td>
        </tr>
        <tr>
          <td> <%= _('Custom_SIP_Header') %>:</td>
          <td> <%= text_field_tag 'custom_sip_header', device.custom_sip_header, "class" => "input" %>  </td>
        </tr>
        <tr>
          <td> <%= _('Custom_Destination_Header') %>:</td>
          <td> <%= text_field_tag 'device[custom_dst_header]', device.custom_dst_header, "class" => "input" %>  </td>
        </tr>

    <% end %>

    <tr>
      <td height="20"></td>
    </tr>

    <tr>
      <td class="bottom_border" colspan=2>
        <b><%= _('Advanced') %></b>
      </td>
    </tr>
    <tr>
      <td height="10"></td>
    </tr>

    <tr <%= tooltip(_('Grace_Time'), _('Grace_Time_Explanation')) %>>
      <td><%= _('Grace_Time') %>:</td>
      <td><%= text_field_tag 'grace_time', device.grace_time, "class" => "input" %></td>
    </tr>
    <tr>
      <td> <%= _('Progressinband') %>:</td>
      <td>
        <%= radio_button('device', 'progressinband', 'no') %> <%= _('_No') %>
        <%= radio_button('device', 'progressinband', 'yes') %> <%= _('_Yes') %>
        <%= radio_button('device', 'progressinband', 'never') %> <%= _('Never') %>
      </td>
    </tr>
    <tr>
      <td> <%= _('Video_support') %>:</td>
      <td>
        <%= radio_button_tag('device[videosupport]', 'no', device.videosupport == 'no') %> <%= _('_No') %>
        <%= radio_button_tag('device[videosupport]', 'yes', device.videosupport == 'yes') %> <%= _('_Yes') %>
      </td>
    </tr>
    <tr>
      <td> <%= _('Allow_duplicate_calls') %>:</td>
      <td>
        <%= radio_button_tag('device[allow_duplicate_calls]', '0', device.allow_duplicate_calls.to_i == 0) %> <%= _('_No') %>
        <%= radio_button_tag('device[allow_duplicate_calls]', '1', device.allow_duplicate_calls.to_i == 1) %> <%= _('_Yes') %>
      </td>
    </tr>
    <tr>
      <td> <%= _('Interpret_NO_ANSWER_as_FAILED') %>:</td>
      <td>
        <%= radio_button_tag('provider[interpret_noanswer_as_failed]', '0', provider.interpret_noanswer_as_failed == 0) %> <%= _('_No') %>
        <%= radio_button_tag('provider[interpret_noanswer_as_failed]', '1', provider.interpret_noanswer_as_failed == 1) %> <%= _('_Yes') %>
      </td>
    </tr>
    <tr>
      <td> <%= _('Interpret_BUSY_as_FAILED') %>:</td>
      <td>
        <%= radio_button_tag('provider[interpret_busy_as_failed]', '0', provider.interpret_busy_as_failed == 0) %> <%= _('_No') %>
        <%= radio_button_tag('provider[interpret_busy_as_failed]', '1', provider.interpret_busy_as_failed == 1) %> <%= _('_Yes') %>
      </td>
    </tr>
    <tr <%= tooltip(_('Fake_Ring'), _('Fake_Ring_Explanation')) %>>
      <td><%= _('Fake_Ring') %>:</td>
      <td>
        <%= radio_button_tag('device[fake_ring]', '0', checked = (device.fake_ring == 0)) %> <%= _('_No') %>
        <%= radio_button_tag('device[fake_ring]', '1', checked = (device.fake_ring == 1)) %> <%= _('_Yes') %>
      </td>
    </tr>

    <% if session[:usertype] != "reseller" %>
        <% if reseller_pro_active? %>
            <tr <%= raw tooltip(_('Common_Use'), _('Common_Use_Explanation')).html_safe %>>
              <td id="common_use"><%= _('Common_Use') %>:</td>
              <td id="provider_is_used_by_reseller">
                <% if is_common_use_used %>
                    <%= _("Provider_is_used_by_reseller") %>
                <% else %>
                    <%= radio_button_tag('provider[common_use]', '0', checked = (provider.common_use == 0)) %> <%= _('_No') %>
                    <%= radio_button_tag('provider[common_use]', '1', checked = (provider.common_use == 1)) %> <%= _('_Yes') %>
                <% end %>
              </td>
            </tr>
        <% end %>
        <tr>
          <td> <%= _('Anti_resale_auto_answer') %> </td>
          <td>
            <%= radio_button_tag('device[anti_resale_auto_answer]', '0', (not device.anti_resale_auto_answer?)) %> <%= _('_No') %>
            <%= radio_button_tag('device[anti_resale_auto_answer]', '1', device.anti_resale_auto_answer?) %> <%= _('_Yes') %>
          </td>
        </tr>
        <tr>
          <td> <%= _('Execute_AGI_script') %> </td>
          <td>
            <%= radio_button_tag('device[execute_agi_script]', '0', (not device.execute_agi_script?)) %> <%= _('_No') %>
            <%= radio_button_tag('device[execute_agi_script]', '1', device.execute_agi_script?) %> <%= _('_Yes') %>
          </td>
        </tr>
        <% if device.device_type == 'SIP' %>
            <tr>
              <td> <%= _('Transport') %>: </td>
              <td>
                <%= radio_button_tag('device[transport]', 'udp', (device.transport == 'udp')) %> <%= _('udp') %>
                <%= radio_button_tag('device[transport]', 'tcp', (device.transport == 'tcp')) %> <%= _('tcp') %>
                <%= radio_button_tag('device[transport]', 'udp,tcp', (device.transport == 'udp,tcp')) %> <%= _('udp_tcp') %>
                <%= radio_button_tag('device[transport]', 'tcp,udp', (device.transport == 'tcp,udp')) %> <%= _('tcp_udp') %>
                <%= radio_button_tag('device[transport]', 'tls', (device.transport == 'tls')) %> <%= _('tls') %>
              </td>
            </tr>
        <% end %>
    <% end %>
        <% if provider_billing_active? %>
            <tr>
              <td> <%= _('Time_limit_per_day') %> </td>
              <td>
                <%= text_field_tag 'device[time_limit_per_day]', device.time_limit_per_day, :size => 10, "class" => "input"  %>
                <%= _('min') %>
              </td>
            </tr>
        <% end %>
    <% if ['SIP','IAX2', 'dahdi', 'H323'].include? provider.tech %>
      <tr>
        <td colspan="2">
          <%= _('Limit_up_to') %> <%= text_field_tag 'provider[cps_call_limit]', provider.cps_call_limit, :size => 3, "class" => "input" %> <%= _('calls') + ', ' + _('during') %> <%= text_field_tag 'provider[cps_period]', provider.cps_period, :size => 3, "class" => "input" %> <%= _('seconds') %>
        </td>
      </tr>
    <% end %>
    </table>
    </td>
    </tr>
<% end %>
</table>
<br/>
<script type="text/javascript">
    <% if !new_provider && device.device_type.to_s == 'SIP' %>
        var ipAuthCheckbox = $('ip_authentication');
        Event.observe(ipAuthCheckbox, 'change', function(event) {
          if (ipAuthCheckbox.checked) {
            $('insecure_port').checked = true;
            $('insecure_invite').checked = true;
          }
        });
    <% end %>
    <% if ccl_active? and device and device.device_type.to_s == "SIP" %>
        function zero_port() {
            if ($('zero_port_1').checked) {
                $('server_port_row').disabled = true;
                $('server_port_row').hidden = true;
            } else {
                $('server_port_row').disabled = false;
                $('server_port_row').hidden = false;
                $('provider_port').value = <%= device.port %>;
            }
        }

        function zero_call_setting() {
            if ($('hostname_ip_dynamic').checked == false && $('ip_authentication').checked == true) {
                $('ip_auth_zero_port').style.display = "";
                $('zero_port_0').disabled = false;
                $('zero_port_1').disabled = false;
            } else {
                $('ip_auth_zero_port').style.display = "none";
                $('zero_port_0').disabled = true;
                $('zero_port_1').disabled = true;
            }
        }

    Event.observe(window, 'load', function () {
        zero_port();
        Event.observe($('zero_port_0'), 'click', function () {
            zero_port();
        });

        Event.observe($('zero_port_1'), 'click', function () {
            zero_port();
        });
    });
    <% end %>

    function show_hostname_lines(value) {
        if ($('hostname_ip_dynamic').checked == false) {
            $('reg_line_row').style.display = '';
            $('reg_extension_row').style.display = '';
            $('registration_check_prov').style.display = '';
            <% if ccl_active? and device and device.device_type.to_s == "SIP" %>
                zero_call_setting();
            <% end %>
        }
        if (value == 'hostname') {
            $('server_hostname_row').style.display = "";
            $('server_ip_row').style.display = "none";
            $('ip_format_ip').style.display = "none";
            $('server_port_row').style.display = "";
            //$('ip_authentication').disabled = true;
            $('reg_notice_dynamic').style.display = "none";
            <% if ccl_active? and device_type.to_s == "SIP" %>
                zero_call_setting();
            <% end %>
        }
        if (value == 'ip') {
            $('server_hostname_row').style.display = "";
            $('server_ip_row').style.display = "";
            $('ip_format_ip').style.display = "";
            $('server_port_row').style.display = "";
            $('ip_authentication').disabled = false;
            $('reg_notice_dynamic').style.display = "none";
            <% if ccl_active? and device_type.to_s == "SIP" %>
                zero_call_setting();
            <% end %>
        }
        if (value == 'dynamic') {
            $('server_hostname_row').style.display = "none";
            $('server_ip_row').style.display = "none";
            $('ip_format_ip').style.display = "none";
            $('ip_authentication').disabled = true;
            $('server_port_row').style.display = "none";
            $('reg_line_row').style.display = 'none';
            $('reg_extension_row').style.display = 'none';
            $('registration_notice').style.display = 'none';
            $('registration_check_prov').style.display = 'none';
            $('reg_extension_row').style.display = "none";
            $('reg_line_row').style.display = "none";
            $('reg_register_row').style.display = "none";
            $('reg_notice_dynamic').style.display = "";
            <% if ccl_active? and device_type.to_s == "SIP" %>
                zero_call_setting();
            <% end %>
            // $('register').checked = false;
        }
    }

    <% if admin? || reseller? %>
      function disable_radio_buttons(id) {
        if (id == 'device_caller_id_number_1') {
          $('cid_number').disabled = false;
          $('callerid_number_pool_id').disabled = true;
        }
        if (id == 'device_caller_id_number_2') {
          $('callerid_number_pool_id').disabled = false;
          $('cid_number').disabled = true;
        }
      }
    <% end %>

    function disable_lines(value) {
        if (value == "line") {
            $('provider_reg_extension').value = "";
            $('provider_reg_extension').disabled = true;
            $('provider_reg_line').disabled = false;
        } else {
            $('provider_reg_line').value = "";
            $('provider_reg_extension').disabled = false;
            $('provider_reg_line').disabled = true;
        }
    }
    function show_lines(value) {
        if (value) {
            if ($("hostname_ip_dynamic").checked == false && $('ip_authentication').checked == false) {
                $('reg_extension_row').style.display = "";
                $('reg_line_row').style.display = "";
                $('reg_register_row').style.display = "";
            }
        }
        else {
            $('reg_extension_row').style.display = "none";
            $('reg_line_row').style.display = "none";
            $('reg_register_row').style.display = "none";
        }
    }
    function format_register() {
        var checkbox = $('register');
        if ($("provider_login").value == "") {
            checkbox.checked = false;
            checkbox.disabled = true;
            if ($("hostname_ip_dynamic").checked == false && $('ip_authentication').checked == false) {
                $("registration_notice").style.display = "";
            }
        } else {
            checkbox.disabled = false;
            $("registration_notice").style.display = "none";
        }
        var reg = $('registration_check_prov');
        if ($('ip_authentication').checked == false && $("hostname_ip_dynamic").checked == false) {
            reg.style.display = "";
            $('reg_extension_row').style.display = "";
            $('reg_line_row').style.display = "";
            $('reg_register_row').style.display = "";
        }
        else {
            reg.style.display = "none";
            $('reg_extension_row').style.display = "none";
            $('reg_line_row').style.display = "none";
            $('reg_register_row').style.display = "none";
        }
        show_lines(checkbox.checked);
        line = "register => ";
        if ($('hostname_ip_dynamic').checked || $('ip_authentication').checked) {
            if ($('hostname_ip_dynamic').checked) {
                line = "register => <%= _("Dynamic_IP") %>";
            }
            ;
            if ($('ip_authentication').checked) {
                line = "register => <%= _("IP_Authentication") %>";
            }
            ;
        } else {
            if ($('reg_extension').checked == true && $('ip_authentication').checked == false) {
                line += $("provider_login").value + ":" + $("provider_password").value + "@" + $("provider_server_ip").value + ":" + $("provider_port").value + "/" + $('provider_reg_extension').value;
            } else {
                line += $('provider_reg_line').value
            }
        }
        $('reg_register').innerHTML = line;

    }
    show_hostname_lines("<%= hostname_ip %>");
    show_lines(<%= (provider.register == 1).to_s %>);
    disable_lines("<%= provider.reg_line.to_s.length > 0 ? "line" : "extension"  %>");
    format_register();
    <% if admin? || reseller? %>
      disable_radio_buttons('device_caller_id_number_<%= device_caller_id_number%>')
    <% end %>
</script>
<!--[eoform:provider]-->
<script type="text/javascript">
    //<![CDATA[
    Event.observe(window, 'load', function () {
        var ipauth = $('ip_authentication');

        var auth_username = $('auth_username');
        var auth_secret = $('auth_secret');
        var secret = $('provider_password');
        var dyncheck = $('hostname_ip_dynamic');
        var host_ip = $('hostname_ip_hostname');
        var ip_ip = $('hostname_ip_ip');
        <% if provider.tech == "SIP" %>
          var periodic = $('periodic');
          if (dyncheck.checked == true) {
            periodic.style.display = "none";
          }
          else {
            periodic.style.display = "";
          }
        <% end %>

        if (ipauth.checked) {
            auth_username.style.display = "none";
            auth_secret.style.display = "none";

        } else {
            auth_username.style.display = "";
            auth_secret.style.display = "";
        }

        if (dyncheck.checked && ipauth) {
            ipauth.disabled = true;
        }

        if (ipauth.checked) {
            $('qualify_row1').style.display = "none";

        } else {
            $('qualify_row1').style.display = "";
        }

        Event.observe(dyncheck, 'click', function() {
            periodic.style.display = "none";
        });

        Event.observe(host_ip, 'click', function() {
            periodic.style.display = "";
        });

        Event.observe(ip_ip, 'click', function() {
            periodic.style.display = "";
        });

        Event.observe(ipauth, 'click', function () {
            if (ipauth.checked) {
                $('qualify_row1').style.display = "none";

                auth_username.style.display = "none";
                auth_secret.style.display = "none";

                dyncheck.checked = false;
                dyncheck.disabled = true;
                secret.value = "";
                $('qualify_no').checked = true;
                $('qualify_yes').checked = false;
                $('qualify_yes').disabled = true;
            } else {
                $('qualify_row1').style.display = "";
                auth_username.style.display = "";
                auth_secret.style.display = "";
                $('qualify_yes').disabled = false;
                dyncheck.disabled = false;
            }
        });
    });

    //]]>
</script>
